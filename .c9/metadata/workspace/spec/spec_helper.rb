{"filter":false,"title":"spec_helper.rb","tooltip":"/spec/spec_helper.rb","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":74}},"text":"# This file is copied to spec/ when you run 'rails generate rspec:install'"},{"action":"insertText","range":{"start":{"row":0,"column":74},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":46,"column":0}},"lines":["ENV[\"RAILS_ENV\"] ||= 'test'","require File.expand_path(\"../../config/environment\", __FILE__)","require 'rspec/rails'","require 'rspec/autorun'","require 'minitest/autorun'","","# Requires supporting ruby files with custom matchers and macros, etc,","# in spec/support/ and its subdirectories.","Dir[Rails.root.join(\"spec/support/**/*.rb\")].each { |f| require f }","","# Checks for pending migrations before tests are run.","# If you are not using ActiveRecord, you can remove this line.","ActiveRecord::Migration.check_pending! if defined?(ActiveRecord::Migration)","","RSpec.configure do |config|","  # ## Mock Framework","  #","  # If you prefer to use mocha, flexmock or RR, uncomment the appropriate line:","  #","  # config.mock_with :mocha","  # config.mock_with :flexmock","  # config.mock_with :rr","","  # Remove this line if you're not using ActiveRecord or ActiveRecord fixtures","  config.fixture_path = \"#{::Rails.root}/spec/fixtures\"","","  # If you're not using ActiveRecord, or you'd prefer not to run each of your","  # examples within a transaction, remove the following line or assign false","  # instead of true.","  config.use_transactional_fixtures = true","","  # If true, the base class of anonymous controllers will be inferred","  # automatically. This will be the default behavior in future versions of","  # rspec-rails.","  config.infer_base_class_for_anonymous_controllers = false","","  # Run specs in random order to surface order dependencies. If you find an","  # order dependency and want to debug it, you can fix the order by providing","  # the seed, which is printed after each run.","  #     --seed 1234","  config.order = \"random\"","  ","  # From Hartl","  config.include Capybara::DSL","end"]}]}]]},"ace":{"folds":[],"scrolltop":213.63633918762207,"scrollleft":0,"selection":{"start":{"row":46,"column":0},"end":{"row":46,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":13,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1410888065241,"hash":"282b620e5f19244560f6325ec38364f867abe4da"}